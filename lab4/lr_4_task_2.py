# -*- coding: utf-8 -*-
"""LR_4_Task_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hy3CXYRgE8KUMy20PJ1D2l31UcIRE5j9
"""

import numpy as np
import matplotlib.pyplot as plt

x_vals = np.array([0.1, 0.3, 0.4, 0.6, 0.7])
y_vals = np.array([3.2, 3, 1, 1.8, 1.9])

vander_matrix = np.vander(x_vals, len(x_vals))
poly_coeffs = np.linalg.solve(vander_matrix, y_vals)

def evaluate_polynomial(x_value, coeffs):
    return np.sum([c * (x_value ** idx) for idx, c in enumerate(coeffs[::-1])])

x_range = np.linspace(x_vals.min(), x_vals.max(), 500)
y_range = [evaluate_polynomial(xi, poly_coeffs) for xi in x_range]

plt.scatter(x_vals, y_vals, label="Вихідні дані", color="blue")
plt.plot(x_range, y_range, label="Поліном інтерполяції", color="green")
plt.title("Поліноміальна інтерполяція")
plt.xlabel("X")
plt.ylabel("Y")
plt.legend()
plt.grid(True)
plt.show()

y_at_02 = evaluate_polynomial(0.2, poly_coeffs)
y_at_05 = evaluate_polynomial(0.5, poly_coeffs)

polynomial_repr = "P(x) = " + " + ".join([f"{coef:.4f}x^{i}" for i, coef in enumerate(poly_coeffs[::-1])])

print("Коефіцієнти полінома:", poly_coeffs)
print("Рівняння полінома:", polynomial_repr)
print(f"Значення полінома у точці 0.2: {y_at_02:.4f}")
print(f"Значення полінома у точці 0.5: {y_at_05:.4f}")